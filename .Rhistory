output <- ifelse(i<10, paste0("0", i), as.character(i))
return(output)
}
}
vec <- c(1,2,3,4,5,10,11,12,13)
result <- pad(vec)
print(result)
pad <- function(vec){
output <- c()
for(i in vec){
output <- c(ifelse(i<10, paste0("0", i), as.character(i)))
return(output)
}
}
vec <- c(1,2,3,4,5,10,11,12,13)
result <- pad(vec)
print(result)
pad <- function(vec){
output <- c()
for(i in vec){
output <- c(output, ifelse(i<10, paste0("0", i), as.character(i)))
return(output)
}
}
vec <- c(1,2,3,4,5,10,11,12,13)
result <- pad(vec)
print(result)
pad <- function(vec){
x <- c()
y <- c()
for(i in vec){
if (i<10){
x <- c(x, paste0("0", i))
}
else {
y <- c(y, as.character(i))
}
}
output <- c(x,y)
return(output)
}
vec <- c(1,2,3,4,5,10,11,12,13)
result <- pad(vec)
print(result)
vec <- seq(0,15)
years <- pad(vec)
vec <- seq(1,12)
months <- pad(vec)
yrs <- seq(0,15)
years <- pad(yrs)
rm(years)
years <- pad(yrs)
expand.grid(months,years)
df <- expand.grid(years,months)
dates <- c(paste0(df$Var1,df$Var2))
txt1 <- download.file(http://www2.census.gov/econ/bps/Metro/ma0001c.txt)
txt1 <- download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt")
txt1 <- as.data.frame(download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt"))
txt1 <- as.data.frame(download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt", mode=wb))
txt1 <- as.data.frame(download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt", destfile ="~/GitHub/data-science-assignments/ma0001c.txt",  mode=wb))
txt1 <- as.data.frame(download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt",
destfile ="~/GitHub/data-science-assignments/ma0001c.txt",  mode="wb"))
View(txt1)
View(txt1)
txt1 <- read.table(txt1, header=FALSE)
View(txt1)
View(txt1)
txt1 <- download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt",
destfile ="~/GitHub/data-science-assignments/ma0001c.txt",  mode="wb")
txt1 <- read.table(txt1, header=FALSE)
txt1 <- read.table("~/GitHub/data-science-assignments/ma0001c.txt", header=FALSE)
txt1 <- download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt", destfile ="~/GitHub/data-science-assignments/ma0001c.txt",  mode="wb")
txt1 <- read.table("~/GitHub/data-science-assignments/ma0001c.txt", header=FALSE)
txt1 <- read.table("~/GitHub/data-science-assignments/ma0001c.txt", header=FALSE,blank.lines.skip = TRUE)
txt1 <- download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt")
txt1 <- read.table("~/GitHub/data-science-assignments/ma0001c.txt", header=FALSE,blank.lines.skip = TRUE)
txt1 <- read.table("~/GitHub/data-science-assignments/ma0001c.txt", header=FALSE, sep = "," skip=4, blank.lines.skip = TRUE)
txt1 <- read.table("~/GitHub/data-science-assignments/ma0001c.txt", header=FALSE, sep = ",", skip=4, blank.lines.skip = TRUE)
View(txt1)
View(txt1)
rm(years)
year <- seq(0,15) %>% pad()
library(dplyr)
year <- seq(0,15) %>% pad()
pad <- function(vec){
x <- c()
y <- c()
for(i in vec){
if (i<10){
x <- c(x, paste0("0", i))
}
else {
y <- c(y, as.character(i))
}
}
output <- c(x,y)
return(output)
}
year <- seq(0,15) %>% pad()
month <- seq(1,12) %>% pad()
dates <- expand.grid(year,months) %>% c(paste0(df$Var1,df$Var2))
df <- expand.grid(year,month)
dates <- c(paste0(df$Var1,df$Var2))
download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt", txt1, mode="wb")
txt1 <- tempfile()
download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt", txt1, mode="wb")
permits <- read.csv(txt1, header=FALSE, skip=4)[,c(1,2,5)]
View(permits)
View(permits)
View(permits)
View(permits)
txt1 <- tempfile()
download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt", txt1, mode="wb")
permits <- read.csv(txt1, header=FALSE, skip=4, colClasses = c(rep("character",2), rep("NULL", 3), "integer", rep("NULL",29))
View(permits)
View(permits)
permits <- read.csv(txt1, header=FALSE, skip=4, colClasses = c(rep("character",2), rep("NULL", 3), "integer", rep("NULL",29)))
permits <- read.csv(txt1, header=FALSE, skip=4, colClasses = c(rep("character",2), rep("NULL", 3), "integer", rep("NULL",30)))
permits <- read.csv(txt1, header=FALSE, skip=4, colClasses = c(rep("character",2), rep("NULL", 3), "integer", rep("NULL",n)))
count.fields(txt1)
permits <- read.csv(txt1, header=FALSE, skip=4)[,c(1,2,6)]
View(permits)
View(permits)
txt1 <- tempfile()
permits <- c()
download.file("http://www2.census.gov/econ/bps/Metro/ma0001c.txt", txt1, mode="wb")
permits <-rbind(read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
download.file("http://www2.census.gov/econ/bps/Metro/ma0002c.txt", txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
View(permits)
View(permits)
for(i in dates) {
download.file("http://www2.census.gov/econ/bps/Metro/ma[i]c.txt", txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
for(i in dates) {
download.file("http://www2.census.gov/econ/bps/Metro/ma[i]c.txt", txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
}
year <- seq(0,15) %>% pad()
month <- seq(1,12) %>% pad()
df <- expand.grid(year,month)
dates <- c(paste0(df$Var1,df$Var2))
library(dplyr)
pad <- function(vec){
x <- c()
y <- c()
for(i in vec){
if (i<10){
x <- c(x, paste0("0", i))
}
else {
y <- c(y, as.character(i))
}
}
output <- c(x,y)
return(output)
}
year <- seq(0,15) %>% pad()
month <- seq(1,12) %>% pad()
df <- expand.grid(year,month)
dates <- c(paste0(df$Var1,df$Var2))
permits <- c()
txt1 <- tempfile()
for(i in dates) {
download.file("http://www2.census.gov/econ/bps/Metro/ma[i]c.txt", txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
}
for(i in dates) {
download.file("http://www2.census.gov/econ/bps/Metro/ma*c.txt", txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
}
for(i in dates) {
url1 <- paste0("http://www2.census.gov/econ/bps/Metro/ma",i,"c.txt")
download.file(url1, txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
}
View(permits)
View(permits)
sum(is.na(permits$V1))
sum(is.na(permits$V5))
sum(is.na(permits$V6))
sum(is.na(permits))
View(permits)
View(permits)
View(permits)
by(permits, permits$V5, mean(permits$V6))
permits$mean <- NA
permits$mean <- by(permits, permits$V5, mean(permits$V6))
permits$mean <- by(permits, permits$V5, colMeans(permits$V6))
permits$mean <- by(permits, permits$V5, mean.default(permits$V6))
permits$mean <- by(permits, permits$V5, function(permits$mean) mean.default(permits$V6))
permits$mean <- by(permits, permits$V5, function() mean.default(permits$V6))
permits$mean <- by(permits, permits$V5, function(permits$V6) mean.default(permits$V6))
permits$mean <- by(permits, permits$V5, FUN = mean, mean(permits$V6))
permitmeans <- by(permits, permits$V5, FUN = mean, mean(permits$V6))
warnings()
is.numeric(permits$V6)
permitmeans <- by(permits, permits$V5, FUN = mean(permits$V6))
permitmeans <- by(permits, permits$V5, FUN = mean(x) mean(permits$V6))
permitmeans <- by(permits, permits$V5, FUN = mean(x), mean(permits$V6))
permitmeans <- by(permits, permits$V5, FUN = mean(permits$V6))
permitmeans <- by(permits, permits$V5, colMeans)
permitmeans <- by(permits, permits$V5, colMeans(permits$V6))
permitmeans <- by(permits$V6, permits$V5, mean)
permits$mean <- by(permits$V6, permits$V5, mean)
library(dplyr)
## Task 1: Padding function
pad <- function(vec){
x <- c()
y <- c()
for(i in vec){
if (i<10){
x <- c(x, paste0("0", i))
}
else {
y <- c(y, as.character(i))
}
}
output <- c(x,y)
return(output)
}
## Task 2: String vector of YYMM
year <- seq(0,15) %>% pad()
month <- seq(1,12) %>% pad()
df <- expand.grid(year,month)
dates <- c(paste0(df$Var1,df$Var2))
## Task 3: download files
permits <- c()
txt1 <- tempfile()
for(i in dates) {
url1 <- paste0("http://www2.census.gov/econ/bps/Metro/ma",i,"c.txt")
download.file(url1, txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
}
sum(is.na(permits)) # there are no NA; if there were, use na.omit
permits$mean <- NA
View(permits)
View(permits)
permits[order(V5, V1, V6, mean)]
permits[order(permits[,2], permits[,1])]
permits$dates <- permits$V1
keeps <- c(permits$V1, permits$V5,permits$V6, permits$mean)
permits[keeps]
pad <- function(vec){
x <- c()
y <- c()
for(i in vec){
if (i<10){
x <- c(x, paste0("0", i))
}
else {
y <- c(y, as.character(i))
}
}
output <- c(x,y)
return(output)
}
## Task 2: String vector of YYMM
year <- seq(0,15) %>% pad()
month <- seq(1,12) %>% pad()
df <- expand.grid(year,month)
dates <- c(paste0(df$Var1,df$Var2))
## Task 3: download files
permits <- c()
txt1 <- tempfile()
for(i in dates) {
url1 <- paste0("http://www2.census.gov/econ/bps/Metro/ma",i,"c.txt")
download.file(url1, txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
}
dim(permits)
names(permits) <- c("dates", "msa", "number")
View(permits)
View(permits)
permitmeans <- by(permits$number, list(permits$msa), mean)
print permitmeans
print(permitmeans)
dim(permitmeans)
permitmeans <- as.data.frame(by(permits$number, list(permits$msa), mean))
dfmeans <- do.call(rbind,permitmeans)
permitmeans <- by(permits$number, list(permits$msa), mean)
dfmeans <- do.call(rbind,permitmeans)
dfmeans <- do.call(rbind, permitmeans)
class(permitmeans)
dfmeans <- rbind(permitmeans)
View(dfmeans)
View(dfmeans)
dfmeans <- cbind(permitmeans)
View(dfmeans)
View(dfmeans)
permitmeans <- by(permits[,3], list(permits[,2]), mean)
dfmeans <- cbind(permitmeans)
names(dfmeans) <- c("msa", "mean")
View(dfmeans)
View(dfmeans)
dfmeans <- cbind(permitmeans)
names(dfmeans) <- c("msa", "mean")
View(dfmeans)
View(dfmeans)
class(dfmeans)
dfmeans <- as.data.frame(cbind(permitmeans))
names(dfmeans) <- c("msa", "mean")
View(dfmeans)
View(dfmeans)
dfmeans <- (cbind(permitmeans))
colnames(dfmeans) <- c("msa", "mean")
View(dfmeans)
View(dfmeans)
colnames(dfmeans)
dfmeans <- as.data.frame(dfmeans)
dfmeans <- as.data.frame(t(dfmeans[seq(nrow(dfmeans)),seq(ncol(dfmeans))]))
class(permitmeans)
mode(permitmeans)
dim(permitmeans)
dfmeans <- do.call(cbind(permitmeans))
dfmeans <- do.call(cbind,permitmeans)
typeof(permitmeans)
permitmeans <- aggregate(permits[, 3], list(permits[,2]), mean)
View(permitmeans)
View(permitmeans)
names(dfmeans) <- c("msa", "mean")
names(permitmeans) <- c("msa", "mean")
View(dfmeans)
View(dfmeans)
permitmeans <- aggregate(permits[, 3], list(permits[,2]), mean)
View(dfmeans)
permitmeans2 <- aggregate(permits[, 3], list(permits[,2]), mean)
names(permitmeans2) <- c("msa", "mean")
View(permitmeans2)
### Homework assignment 1
### Sarah Unbehaun
### February 2017
library(dplyr)
## Task 1: Padding function
pad <- function(vec){
x <- c()
y <- c()
for(i in vec){
if (i<10){
x <- c(x, paste0("0", i))
}
else {
y <- c(y, as.character(i))
}
}
output <- c(x,y)
return(output)
}
## Task 2: String vector of YYMM
year <- seq(0,15) %>% pad()
month <- seq(1,12) %>% pad()
df <- expand.grid(year,month)
dates <- c(paste0(df$Var1,df$Var2))
## Task 3: download files
permits <- c()
txt1 <- tempfile()
for(i in dates) {
url1 <- paste0("http://www2.census.gov/econ/bps/Metro/ma",i,"c.txt")
download.file(url1, txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
}
## Task 4: drop NA, find means, export to csv
sum(is.na(permits))
# there are no NA; if there were, use na.omit
permitmeans <- aggregate(permits[, 3], list(permits[,2]), mean)
names(permitmeans) <- c("msa", "mean")
write.csv(permitmeans, "C:/Users/Sarah/SkyDrive/Documents/Georgetown/PPOL 670/sarah-unbehaun-hmwk1")
write.csv(permitmeans, "C:/Users/Sarah/SkyDrive/Documents/Georgetown/PPOL 670/sarah-unbehaun-hmwk1.csv")
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
pad <- function(vec){
x <- c()
y <- c()
for(i in vec){
if (i<10){
x <- c(x, paste0("0", i))
}
else {
y <- c(y, as.character(i))
}
}
output <- c(x,y)
return(output)
}
year <- seq(0,15) %>% pad()
month <- seq(1,12) %>% pad()
df <- expand.grid(year,month)
dates <- c(paste0(df$Var1,df$Var2))
permits <- c()
txt1 <- tempfile()
for(i in dates) {
url1 <- paste0("http://www2.census.gov/econ/bps/Metro/ma",i,"c.txt")
download.file(url1, txt1, mode="wb")
permits <-rbind(permits, read.csv(txt1, header=FALSE, skip=4)[,c(1,5,6)])
}
sum(is.na(permits))
# there are no NA; if there were, use na.omit
permitmeans <- aggregate(permits[, 3], list(permits[,2]), mean)
names(permitmeans) <- c("msa", "mean")
write.csv(permitmeans, "C:/Users/Sarah/SkyDrive/Documents/Georgetown/PPOL 670/sarah-unbehaun-hmwk1.csv")
library(foreign)
read.xport("C:\Users\Sarah\Downloads\FSAS76\accident.ssd")
accident76 <- read.xport("C:\Users\Sarah\Downloads\FSAS76\accident.ssd")
accident76 <- read.xport("C:/Users/Sarah/Downloads/FSAS76/accident.ssd")
accident76 <- read.xport("C:/Users/Sarah/Downloads/FSAS76.zip/accident.ssd")
accident76 <- read.ssd("C:/Users/Sarah/Downloads/FSAS76.zip/accident.ssd")
readLines("C:/Users/Sarah/Downloads/FSEQL00/TPLFin2000.Dat")
readLines("C:/Users/Sarah/Downloads/FSEQL00/TPLFin2000.Dat", n=10)
accident00 <- read.table("C:/Users/Sarah/Downloads/FSEQL00/TPLFin2000.Dat", header="TRUE")
accident00 <- read.table("C:/Users/Sarah/Downloads/FSEQL00/TPLFin2000.Dat")
accident00 <- read.dbf("C:/Users/Sarah/Downloads/FARSDBF00/ACCIDENT.dbf")
View(accident00)
str(accident00)
setwd("/Users/jeff/Documents/Github/data-science-project/")
setwd("/Users/Sarah/Documents/Github/data-science-project/")
setwd("/Users/Sarah/Documents/Github/data-science/lecture-09/data")
load("nyc311.Rda")
dim(nyc311)
colnames(nyc311)
summary(nyc311)
sumUp <- function(data, clusters, depth = 3, horizontal = FALSE){
# Summarize cluster variables by most frequent
#
# Args:
#       data: input data
#       clusters: vector of cluster labels
#       depth: top 3 most frequent variables
#       horizontal: control format of results. FALSE means one cluster per row.
#
# Returns:
#       A data frame of k-number of centroids
#
#Calculate means, rotate such that features = rows
overview <- aggregate(data, list(clusters), mean)
overview <- as.data.frame(cbind(colnames(overview)[2:ncol(overview)],
t(overview[,2:ncol(overview)])))
row.names(overview) <- 1:nrow(overview)
overview[,1] <- gsub("count.","",as.character(overview[,1]))
#Clean up values as numerics
for(i in 2:ncol(overview)){
overview[,i] <- round(as.numeric(as.character(overview[,i])),2)
}
#Get top X features
depth.temp <- data.frame()
for(i in 2:ncol(overview)){
temp <- overview[order(-overview[,i]), ]
temp <- paste("(",temp[,i], "): ", temp[,1], sep = "")
temp <- as.data.frame(matrix(temp[1:depth],
nrow = 1,
ncol = depth))
colnames(temp) <- paste0("Rank.", 1:depth)
depth.temp <- rbind(depth.temp, temp)
}
depth.temp <- cbind(data.frame(table(clusters)), depth.temp)
#Rotate?
if(horizontal == TRUE){
depth.temp <- t(depth.temp)
}
return(depth.temp)
}
clusters <- rep(1, nrow(nyc311))
clusters <- rep(1, nrow(nyc311)) #essentially the population average
sumUp(nyc311[,3:ncol(nyc311)], clusters, 10, horizontal = TRUE)
library(foreign)
nyc311.2 <- scale(nyc311[,c(3:ncol(nyc311))], scale = TRUE, center = TRUE)
master <- data.frame()
for(i in seq(3,50,3)){
print(i)
new <- kmeans(nyc311.2, i) #each i will be a centroid
master <- rbind(master,
data.frame(k = i,
ss = new$betweenss)) #extracts WSS statistic, bind to df
}
plot(master)
set.seed(20)
cluster <- kmeans(nyc311.2, 10)$cluster
palette(colorRampPalette(c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'))(10))
op <- par(mar = rep(0, 4))
plot(nyc311$lon, nyc311$lat, col = factor(cluster), pch = 15, cex = 0.16,
frame.plot=FALSE, yaxt='n', ann=FALSE, xaxt='n')
legend(x="topleft", bty = "n", legend=levels(factor(cluster)),
cex = 1,  x.intersp=0, xjust=0, yjust=0, text.col=seq_along(levels(factor(cluster))))
par(op)
recap <- sumUp(nyc311[,3:ncol(nyc311)], cluster, 5)
View(recap)
temp <- tempfile()
download.file("http://gss.norc.org/documents/spss/GSS_spss.zip",temp, mode="wb")
unzipped <- unzip(temp, exdir=getwd())
GSS <- read.spss(unzipped[1])
nyc311.short <- nyc311[sample(1:nrow(nyc311), replace = FALSE, 10000), ]
nyc.short <- scale(nyc311.short[,3:ncol(nyc311.short)])
d <- dist(as.matrix(nyc.short), method = "euclidean")
hc <- hclust(d, method="ward.D")
plot(hc, main = "Hierarchical Clustering Example", cex = 0.001)
rect.hclust(hc, k=10, border="red")
groups <- cutree(hc, k=10) # cut tree into 5 clusters
groups <- cutree(hc, k=10) # cut tree into 5 clusters
palette(colorRampPalette(c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'))(10))
op <- par(mar = rep(0, 4))
plot(nyc311.short$lon, nyc311.short$lat, col = factor(groups), pch = 15, cex = 0.2,
frame.plot=FALSE, yaxt='n', ann=FALSE, xaxt='n')
legend(x="topleft", bty = "n", legend=levels(factor(groups)),
cex = 1,  x.intersp=0, xjust=0, yjust=0, text.col=seq_along(levels(factor(groups))))
par(op)
recap <- sumUp(nyc311.short[,3:ncol(nyc311.short)], groups, 5)
View(recap)
setwd("/Users/Sarah/Documents/Github/data-science-project/")
filenames <- dir(unzipped, full.names=TRUE)
unzipped <- unzip(temp, exdir=getwd())
read.spss("C:/Users/Sarah/Documents/GSS_spss/GSS7214_R6b.sav")
GSS.complate <- read.spss("C:/Users/Sarah/Documents/GSS_spss/GSS7214_R6b.sav")
GSS.complete <- read.spss("C:/Users/Sarah/Documents/GSS_spss/GSS7214_R6b.sav", to.data.frame = TRUE)
